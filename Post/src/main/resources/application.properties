server.port=8080
#spring.main.banner-mode=off

# create n drop tables, loads import.sql.bak
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=create

#spring.jpa.hibernate.ddl-auto=update
ô
spring.datasource.url=jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST = 222.252.17.169)(PORT = 11521))(CONNECT_DATA =(SERVER = DEDICATED)(SERVICE_NAME = orcl)))
#spring.datasource.url=jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.1.223)(PORT = 1521))(CONNECT_DATA =(SERVER = DEDICATED)(SERVICE_NAME = orcl)))
spring.datasource.username=testattt
#spring.datasource.username=pccc_dev_docker3
#spring.datasource.username=PCCC_BUSINESS_DEV
spring.datasource.password=testattt
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver

# HikariCP settings
# spring.datasource.hikari.*
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.connection-timeout = 20000
#minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle= 10
#maximum pool size
spring.datasource.hikari.maximum-pool-size= 100
#maximum idle time for connection
spring.datasource.hikari.idle-timeout=10000
# maximum lifetime in milliseconds of a connection in the pool after it is closed.
spring.datasource.hikari.max-lifetime= 1000
#spring.datasource.hikari.auto-commit =true #default auto-commit behavior.

logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql=trace
spring.messages.encoding=UTF-8


